name: CI with Sonar and Artifactory

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: self-hosted
    env:
      JAVA_TOOL_OPTIONS: "-Dcom.sun.net.ssl.checkRevocation=false"
      JFROG_CLI_INSECURE_TLS: "true"
    steps:
      - name: Set up JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ secrets.JFROG_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
        with:
          custom-server-id: evidence-prod
          version: 2.78.3

      - name: Test JFrog Connection
        run: |
          jf c show
          jf c use evidence-prod
          jf rt ping
          jf -v
          whereis jf

      - name: Debug Artifactory Connection
        run: |
          echo "Pinging Artifactory..."
          curl -v -H "Authorization: Bearer ${{ secrets.JFROG_ACCESS_TOKEN }}" "${{ secrets.JFROG_URL }}/artifactory/api/system/ping"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Java version
        run: |
          java -version
          echo "JAVA_HOME: $JAVA_HOME"

     - name: SonarQube Scan
       uses: SonarSource/sonarcloud-github-action@v2
       env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         projectBaseDir: .
         args: >
           -Dsonar.organization=misha-sonar
           -Dsonar.projectKey=misha-sonar_integration
           -Dsonar.host.url=https://sonarcloud.io
           -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Build with Maven and publish to Artifactory
        run: |
          jf mvn-config --repo-deploy-snapshots misha-maven-libs-snapshot-local --repo-deploy-releases misha-maven-libs-release-local --repo-resolve-snapshots misha-maven-maven-remote --repo-resolve-releases misha-maven-maven-remote --server-id-deploy evidence-prod --server-id-resolve evidence-prod
          jf c show
          jf mvn install

      - name: Create evidence for build
        run: |
          jf evd create --build-name=CI with Sonar and Artifactory --build-number=${{ github.run_number }} --use-sonar-predicate
